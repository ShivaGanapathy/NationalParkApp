{"ast":null,"code":"var _jsxFileName = \"/Users/shivaganapathy/Desktop/NationalParkWebApp/client/src/components/Parks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Parks() {\n  _s();\n\n  const {\n    activityName\n  } = useParams();\n  const request = 'https://developer.nps.gov/api/v1/activities/parks?q=' + activityName + '&api_key=pwVAaI7eyJ3qGEpakWoicbKA0kCPdzM6KVyeH2mB';\n  const [object, setObject] = useState([{}]);\n  const [park, setPark] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(async () => {\n    const response = await fetch(request);\n    const info = response.json();\n    console.log(info[0]);\n    const item = info.data.parks;\n    setPark(item);\n    setLoading(false);\n    console.log('we are effecting');\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Showing Results for National Parks that Offer: \", activityName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), {\n      loading\n    } ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"..looading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: park.activityName.parkCode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Parks, \"OvfXTtRIumuOjihW3FB8mpbD17w=\", false, function () {\n  return [useParams];\n});\n\n_c = Parks;\nexport default Parks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Parks\");","map":{"version":3,"sources":["/Users/shivaganapathy/Desktop/NationalParkWebApp/client/src/components/Parks.js"],"names":["React","useParams","useState","useEffect","Button","Parks","activityName","request","object","setObject","park","setPark","loading","setLoading","response","fetch","info","json","console","log","item","data","parks","parkCode"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,MAAT,QAAuB,iBAAvB;;;AAEA,SAASC,KAAT,GAAiB;AAAA;;AACf,QAAM;AAAEC,IAAAA;AAAF,MAAmBL,SAAS,EAAlC;AACA,QAAMM,OAAO,GACX,yDACAD,YADA,GAEA,mDAHF;AAKA,QAAM,CAACE,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAApC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,UAAMW,QAAQ,GAAG,MAAMC,KAAK,CAACR,OAAD,CAA5B;AACA,UAAMS,IAAI,GAAGF,QAAQ,CAACG,IAAT,EAAb;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAAC,CAAD,CAAhB;AACA,UAAMI,IAAI,GAAGJ,IAAI,CAACK,IAAL,CAAUC,KAAvB;AACAX,IAAAA,OAAO,CAACS,IAAD,CAAP;AACAP,IAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD,GARQ,EAQN,EARM,CAAT;AAUA,sBACE;AAAA,4BACE;AAAA,oEAAoDb,YAApD;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEG;AAAEM,MAAAA;AAAF,qBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAGC;AAAA,gBAAMF,IAAI,CAACJ,YAAL,CAAkBiB;AAAxB;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA/BQlB,K;UACkBJ,S;;;KADlBI,K;AAiCT,eAAeA,KAAf","sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\n\nfunction Parks() {\n  const { activityName } = useParams();\n  const request =\n    'https://developer.nps.gov/api/v1/activities/parks?q=' +\n    activityName +\n    '&api_key=pwVAaI7eyJ3qGEpakWoicbKA0kCPdzM6KVyeH2mB';\n\n  const [object, setObject] = useState([{}]);\n  const [park, setPark] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(async () => {\n    const response = await fetch(request);\n    const info = response.json();\n    console.log(info[0]);\n    const item = info.data.parks;\n    setPark(item);\n    setLoading(false);\n    console.log('we are effecting');\n  }, []);\n\n  return (\n    <div>\n      <h1>Showing Results for National Parks that Offer: {activityName}</h1>\n      {{ loading } ? (\n        <div>..looading</div>\n      ) : (\n        <div>{park.activityName.parkCode}</div>\n      )}\n    </div>\n  );\n}\n\nexport default Parks;\n"]},"metadata":{},"sourceType":"module"}