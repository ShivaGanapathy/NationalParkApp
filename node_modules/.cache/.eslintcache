[{"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/index.js":"1","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/App.js":"2","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/reportWebVitals.js":"3","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Navbar/NavigationBar.js":"4","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Activities.js":"5","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/About.js":"6","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Parks.js":"7","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Park.js":"8","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Home/Home.js":"9","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/ParkImages.js":"10"},{"size":478,"mtime":1636227579480,"results":"11","hashOfConfig":"12"},{"size":200,"mtime":1636987106934,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":1636227025873,"results":"14","hashOfConfig":"12"},{"size":1661,"mtime":1636943689601,"results":"15","hashOfConfig":"12"},{"size":1225,"mtime":1636988023136,"results":"16","hashOfConfig":"12"},{"size":409,"mtime":1636847806620,"results":"17","hashOfConfig":"12"},{"size":1367,"mtime":1636943718641,"results":"18","hashOfConfig":"12"},{"size":1357,"mtime":1636988150292,"results":"19","hashOfConfig":"12"},{"size":1732,"mtime":1636990618718,"results":"20","hashOfConfig":"12"},{"size":633,"mtime":1636987434756,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1vgewmr",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/index.js",[],["46","47"],"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/App.js",[],"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/reportWebVitals.js",[],"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Navbar/NavigationBar.js",[],"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Activities.js",["48"],"import React, { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useHistory } from 'react-router-dom';\n\nfunction Activities(props) {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  let history = useHistory();\n\n  const ButtonPressed = (props) => {\n    history.push({\n      pathname: '/parks/' + props,\n      state: { props },\n    });\n  };\n\n  const request =\n    'https://developer.nps.gov/api/v1/activities?limit=50&start=0&api_key=pwVAaI7eyJ3qGEpakWoicbKA0kCPdzM6KVyeH2mB';\n  useEffect(async () => {\n    const response = await fetch(request);\n    const info = await response.json();\n    setData(info.data);\n    setLoading(false);\n  }, []);\n\n  return (\n    <div>\n      <center>\n        <h1>Showing Results for All Activities (In Alphabetical Order): </h1>\n      </center>\n      {loading ? (\n        <div>..loading</div>\n      ) : (\n        data.map((data) => (\n          <div>\n            <br></br>{' '}\n            <Button onClick={() => ButtonPressed(data.name)}>\n              {data.name}\n            </Button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default Activities;\n","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/About.js",[],"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Parks.js",["49","50","51"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport Park from './Park';\n\nfunction Parks() {\n  let history = useHistory();\n\n  const { activityName } = useParams();\n  const request =\n    'https://developer.nps.gov/api/v1/activities/parks?q=' +\n    activityName +\n    '&api_key=pwVAaI7eyJ3qGEpakWoicbKA0kCPdzM6KVyeH2mB';\n\n  const [park, setPark] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(async () => {\n    const response = await fetch(request);\n    const info = await response.json();\n    console.log(info.data[0].parks);\n    const item = info.data[0].parks;\n    setPark(item);\n    setLoading(false);\n  }, []);\n\n  const ButtonPressed = (props) => {\n    history.push({\n      pathname: '/locations/' + props,\n      state: { props },\n    });\n  };\n\n  return (\n    <div>\n      <h1>Showing Results for National Parks that Offer: {activityName}</h1>\n      {loading ? (\n        <div>..loading</div>\n      ) : (\n        park.map((park) => (\n          <div>\n            <br></br>{' '}\n            <Button onClick={() => ButtonPressed(park.parkCode)}>\n              {park.fullName}\n            </Button>\n          </div>\n        ))\n      )}\n    </div>\n  );\n}\n\nexport default Parks;\n","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Park.js",["52","53","54"],"import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport ParkImages from './ParkImages';\nimport { Carousel } from 'react-bootstrap';\nexport default function Park() {\n  const [images, setImages] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [parkName, setParkName] = useState(null);\n  const [parkDescription, setParkDescription] = useState(null);\n  const { parkCode } = useParams();\n  console.log(parkCode);\n\n  const request =\n    'https://developer.nps.gov/api/v1/parks?parkCode=' +\n    parkCode +\n    '&parkCode=&api_key=pwVAaI7eyJ3qGEpakWoicbKA0kCPdzM6KVyeH2mB';\n\n  useEffect(async () => {\n    const response = await fetch(request);\n    const info = await response.json();\n\n    console.log(info);\n\n    setImages(info.data[0].images);\n    setParkName(info.data[0].fullName);\n    setParkDescription(info.data[0].description);\n\n    setLoading(false);\n  }, []);\n\n  return (\n    <div>\n      <p>Showing Results for: {parkCode}</p>\n      {loading ? (\n        <div>..loading</div>\n      ) : (\n        <div>\n          <center>\n            <h1>Welcome to {parkName}!!!</h1>\n          </center>\n\n          <article>\n            <p>{parkDescription}</p>\n            <ParkImages images={images}></ParkImages>\n          </article>\n        </div>\n      )}\n    </div>\n  );\n}\n","/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/Home/Home.js",["55","56","57","58","59","60","61","62","63","64","65"],"/Users/shivaganapathy/Desktop/NationalParkWebApp/src/components/ParkImages.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":20,"column":13,"nodeType":"72","endLine":25,"endColumn":4},{"ruleId":"73","severity":1,"message":"74","line":6,"column":8,"nodeType":"75","messageId":"76","endLine":6,"endColumn":12},{"ruleId":"70","severity":1,"message":"71","line":20,"column":13,"nodeType":"72","endLine":27,"endColumn":4},{"ruleId":"70","severity":1,"message":"77","line":27,"column":6,"nodeType":"78","endLine":27,"endColumn":8,"suggestions":"79"},{"ruleId":"73","severity":1,"message":"80","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":18},{"ruleId":"70","severity":1,"message":"71","line":19,"column":13,"nodeType":"72","endLine":30,"endColumn":4},{"ruleId":"70","severity":1,"message":"77","line":30,"column":6,"nodeType":"78","endLine":30,"endColumn":8,"suggestions":"81"},{"ruleId":"82","severity":1,"message":"83","line":32,"column":13,"nodeType":"84","endLine":32,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":33,"column":15,"nodeType":"84","endLine":33,"endColumn":64},{"ruleId":"82","severity":1,"message":"83","line":37,"column":13,"nodeType":"84","endLine":37,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":38,"column":15,"nodeType":"84","endLine":38,"endColumn":63},{"ruleId":"82","severity":1,"message":"83","line":42,"column":13,"nodeType":"84","endLine":42,"endColumn":25},{"ruleId":"85","severity":1,"message":"86","line":43,"column":15,"nodeType":"84","endLine":43,"endColumn":65},{"ruleId":"82","severity":1,"message":"83","line":51,"column":13,"nodeType":"84","endLine":51,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":54,"column":13,"nodeType":"84","endLine":54,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":57,"column":13,"nodeType":"84","endLine":57,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":60,"column":13,"nodeType":"84","endLine":60,"endColumn":25},{"ruleId":"82","severity":1,"message":"83","line":63,"column":13,"nodeType":"84","endLine":63,"endColumn":25},"no-native-reassign",["87"],"no-negated-in-lhs",["88"],"react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-unused-vars","'Park' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'request'. Either include it or remove the dependency array.","ArrayExpression",["89"],"'Carousel' is defined but never used.",["90"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},{"desc":"91","fix":"93"},"Update the dependencies array to be: [request]",{"range":"94","text":"95"},{"range":"96","text":"95"},[802,804],"[request]",[951,953]]